mdp

module g1 
x1 : [0..2] init 0;
f1 : bool init false;
//-a-T-, a may fail
[a1] f1=false ->
	2/3:(f1'=false)
	+ 1/3:(f1'=true);
[a1]x1=0 -> (x1'=1);
[T]x1 = 1 & f1= false -> (x1'=2);
[T1]x1 = 1 & f1= true -> (x1'=2);
endmodule

module g2 
x2 : [0..2] init 0;
//-a-T-
[a2]x2=0 -> (x2'=1);
[T]x2 = 1 -> (x2'=2);
[T2]x2 = 1 -> (x2'=2);
endmodule

module g3 = g2 [x2=x3, T2=T3] endmodule
module g4 = g2 [x2=x4, T2=T4] endmodule

module g1P
x1p : [0..2] init 0;
//-a-T-, catch a failure
[a1] x1p=0 -> (x1p'=1);
[T] x1p=1 -> (x1p'=2);
[T1] x1p=1 -> (x1p'=2);
[T2] x1p=1 -> (x1p'=2);
[T3] x1p=1 -> (x1p'=2);
[T4] x1p=1 -> (x1p'=2);
[T] x1p=2 -> (x1p'=2);
[T1] x1p=2 -> (x1p'=2);
[T2] x1p=2 -> (x1p'=2);
[T3] x1p=2 -> (x1p'=2);
[T4] x1p=2 -> (x1p'=2);
endmodule

system
g1||g2||g3||g4||g1P
endsystem

label "final" = (x1p=2) & f1=true;