mdp
//online shopping

module M1
x1 : [0..11] init 0;
f1 : bool init false;

[main]x1=0 -> (x1'=1);
//[main]x1=1 -> (x1'=1);

[keyWords]x1=1 & f1=false -> 4/5:(x1'=2)&(f1'=false) 
	+ 1/5:(x1'=2)&(f1'=true);//failure on "keywords"
[keyWords]x1=1 & f1=true -> (x1'=2);//needed because line 19, at most 1 failure

[T]x1=2  & f1=false ->  (x1'=3);
[T1]x1=2  & f1=true ->  (x1'=3);

[keyWords]x1=3 & f1=false -> 4/5:(x1'=2)&(f1'=false) 
	+ 1/5:(x1'=2)&(f1'=true);//failure on "keywords"
[keyWords]x1=3 & f1=true -> (x1'=2);

[item]x1=3 & f1=false -> 2/3:(x1'=4)&(f1'=false) 
	+ 1/3:(x1'=4)&(f1'=true);//f on "item"
[item]x1=3 & f1=true -> (x1'=4);

[T]x1=4 & f1=false -> (x1'=5);
[T1]x1=4 & f1=true -> (x1'=5);

//[main]x1=3 -> (x1'=1);
[inStock]x1=5-> (x1'=6);
[outOfStock]x1=5 -> (x1'=5);
//[main]x1=5 -> (x1'=1);
//[main]x1=6 -> (x1'=1);
[info]x1=6 -> (x1'=7);
//[main]x1=7 -> (x1'=1);

[payment]x1=7  & f1=true-> (x1'=8);//no failure on "payment" yet
[payment]x1=7  & f1=false-> 1/2:(x1'=8)&(f1'=false)
	+1/2:(x1'=8)&(f1'=true);//no failure on "payment" yet
[T]x1=8 & f1=false -> (x1'=9);
[T1]x1=8 & f1=true -> (x1'=9);
[T]x1=9 & f1=false -> (x1'=10);
[T1]x1=9 & f1=true -> (x1'=10);
//[main]x1=10 -> (x1'=1);
[end]x1=10 -> (x1'=11);
////[new]x1=11 & f1=false -> (x1'=0);//new only after f1=false
endmodule

module M2
x2 : [0..11] init 0;

[main2]x2=0 -> (x2'=1);
//[main]x2=1 -> (x2'=1);
[keyWords2]x2=1-> (x2'=2);
[T]x2=2  & f1=false ->  (x2'=3);
[T2]x2=2  & f1=true ->  (x2'=3);
[keyWords2]x2=3-> (x2'=2);
[item2]x2=3 -> (x2'=4);
[T]x2=4 & f1=false -> (x2'=5);
[T2]x2=4 & f1=true -> (x2'=5);
//[main]x2=3 -> (x2'=1);
[inStock2]x2=5-> (x2'=6);
[outOfStock2]x2=5 -> (x2'=5);
//[main]x2=5 -> (x2'=1);
//[main]x2=6 -> (x2'=1);
[info2]x2=6 -> (x2'=7);
//[main]x2=7 -> (x2'=1);
[payment2]x2=7 -> (x2'=8);
[T]x2=8 & f1=false -> (x2'=9);
[T2]x2=8 & f1=true -> (x2'=9);
[T]x2=9 & f1=false -> (x2'=10);
[T2]x2=9 & f1=true -> (x2'=10);
//[main]x2=10 -> (x2'=1);
[end2]x2=10 -> (x2'=11);
////[new2]x2=11 -> (x2'=0);
endmodule

module M1P
x1p : [0..12] init 0;
[main]x1p=0->(x1p'=1);
//[main]x1p=1->(x1p'=1);
[keyWords]x1p=1->(x1p'=2);
[keyWords]x1p=3->(x1p'=2);
[T]x1p=2->(x1p'=3);
[T1]x1p=2->(x1p'=3);
[T2]x1p=2->(x1p'=3);
[item]x1p=3->(x1p'=4);
[T]x1p=4->(x1p'=5);
[T1]x1p=4->(x1p'=5);
[T2]x1p=4->(x1p'=5);
//[main]x1p=3->(x1p'=1);
[inStock]x1p=5->(x1p'=6);
[outOfStock]x1p=5->(x1p'=5);
//[main]x1p=5->(x1p'=1);
[info]x1p=6->(x1p'=7);
//[main]x1p=6->(x1p'=1);
[payment]x1p=7->(x1p'=8);
[T]x1p=8->(x1p'=9);
[T1]x1p=8->(x1p'=9);
[T2]x1p=8->(x1p'=9);
[T]x1p=9->(x1p'=10);
[T1]x1p=9->(x1p'=10);
[T1]x1p=9->(x1p'=10);
[T]x1p=10->(x1p'=11);
[T1]x1p=10->(x1p'=11);
[T2]x1p=10->(x1p'=11);
//[main]x1p=7->(x1p'=1);
//[main]x1p=11->(x1p'=1);
[end]x1p=11->(x1p'=12);
endmodule

system
(M1|[T]| M2)||M1P //manual\ThePRISMLanguage\ProcessAlgebraOperators
endsystem

label "final" = (x1p=12) & (f1=true);
